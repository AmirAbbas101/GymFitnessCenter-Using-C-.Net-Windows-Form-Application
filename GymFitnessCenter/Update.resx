<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>