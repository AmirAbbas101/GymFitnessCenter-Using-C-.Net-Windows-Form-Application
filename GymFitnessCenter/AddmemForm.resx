<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>